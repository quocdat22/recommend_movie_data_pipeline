x-airflow-common: &airflow-common
  build:
    context: .
    args:
      - AIRFLOW_UID=${AIRFLOW_UID:-50000}
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__WEBSERVER__SECRET_KEY=a_super_secret_key_that_you_should_change
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./src:/opt/airflow/src
    - ./airflow/logs:/opt/airflow/logs

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - bash
      - -c
      - |
        airflow db migrate && \
        airflow users create \
          --username admin \
          --password admin \
          --firstname Anonymous \
          --lastname User \
          --role Admin \
          --email admin@example.com
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: airflow webserver
    ports:
      - "8080:8080"
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: airflow scheduler
    restart: always

  airflow-triggerer:
    <<: *airflow-common
    container_name: airflow_triggerer
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: airflow triggerer
    restart: always

volumes:
  postgres_data: 